# -*- coding: utf-8 -*-
"""calculo_tributario_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12kJa6gF4ETRm1iQwqNGyQWecszB8v-_H
"""

import streamlit as st

# Función para calcular IVA débito y crédito
def calcular_iva(ventas_con_iva, compras_con_iva, remanente_anterior):
    iva_debito = ventas_con_iva * 0.19 / 1.19  # IVA desde ventas
    iva_credito = compras_con_iva * 0.19 / 1.19  # IVA desde compras
    saldo_iva = iva_debito - iva_credito + remanente_anterior  # Saldo con remanente anterior
    remanente_actual = 0 if saldo_iva > 0 else abs(saldo_iva)  # Si hay saldo a favor
    return iva_debito, iva_credito, saldo_iva, remanente_actual

# Función para calcular el PPM
def calcular_ppm(ventas_con_iva):
    ppm = (ventas_con_iva / 1.19) * 0.01  # 1% de las ventas netas
    return ppm

# Función para calcular la retención de honorarios
def calcular_retencion(honorarios):
    retencion_honorarios = honorarios * 0.1375  # 13.75% del monto bruto
    return retencion_honorarios

# Función para mostrar el resumen final
def mostrar_resultados(iva_debito, iva_credito, saldo_iva, remanente_actual, ppm, retencion_honorarios):
    st.subheader("Resumen Final")
    st.write(f"IVA Débito (Ventas): ${iva_debito:,.2f}")
    st.write(f"IVA Crédito (Compras): ${iva_credito:,.2f}")

    if saldo_iva > 0:
        st.write(f"Saldo de IVA a pagar: ${saldo_iva:,.2f}")
    else:
        st.write(f"Saldo de IVA a favor: ${abs(saldo_iva):,.2f}")
        st.write(f"Remanente para el próximo mes: ${remanente_actual:,.2f}")

    st.write(f"PPM (1% de las ventas netas): ${ppm:,.2f}")
    st.write(f"Retención por boleta de honorarios (13,75%): ${retencion_honorarios:,.2f}")

    # Total impuestos a pagar
    if saldo_iva > 0:
        total_pagar = saldo_iva + ppm + retencion_honorarios
        st.write(f"Total impuestos a pagar (IVA + PPM + Retención): ${total_pagar:,.2f}")
    else:
        total_pagar = ppm + retencion_honorarios
        st.write(f"Total impuestos a pagar: ${total_pagar:,.2f}")

# Interfaz gráfica con Streamlit
def main():
    st.title("Calculadora Tributaria")
    st.write("Ingrese los valores necesarios para calcular IVA, PPM y Retenciones.")

    # Entrada de datos
    ventas_con_iva = st.number_input("Ventas mensuales (con IVA incluido):", min_value=0.0, step=1000.0)
    compras_con_iva = st.number_input("Compras mensuales (con IVA incluido):", min_value=0.0, step=1000.0)
    honorarios = st.number_input("Monto de boleta de honorarios (sin IVA):", min_value=0.0, step=1000.0)
    remanente_anterior = st.number_input("Remanente de IVA del mes anterior:", min_value=0.0, step=1000.0)

    # Botón para calcular
    if st.button("Calcular"):
        # Cálculos
        iva_debito, iva_credito, saldo_iva, remanente_actual = calcular_iva(ventas_con_iva, compras_con_iva, remanente_anterior)
        ppm = calcular_ppm(ventas_con_iva)
        retencion_honorarios = calcular_retencion(honorarios)

        # Mostrar resultados
        mostrar_resultados(iva_debito, iva_credito, saldo_iva, remanente_actual, ppm, retencion_honorarios)

# Ejecutar la aplicación
if __name__ == "__main__":
    main()